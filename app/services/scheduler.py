# app/services/scheduler.py

from apscheduler.schedulers.asyncio import AsyncIOScheduler
from app.db.crud import get_all_active_items, get_item_by_id, update_current_price, update_last_checked, get_user_by_telegram_id, get_user_by_id
from app.services.parser import fetch_price
from aiogram import Bot
from app.config import settings

scheduler = AsyncIOScheduler()

def schedule_price_check(item_id: int, interval: int):

    scheduler.add_job(
        check_price_for_item,
        'interval',
        minutes=interval,
        args=[item_id],
        id=f"item_{item_id}",
        replace_existing=True,
        coalesce=True,
        misfire_grace_time=60,
    )

async def check_price_for_item(item_id: int):
    item = await get_item_by_id(item_id)
    if not item or not item.is_active:
        print(f"[Scheduler] WatchedItem {item_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ–≥–¥–∞
    await update_last_checked(item_id)

    price, title, method = await fetch_price(item.url)
    print(f"[Scheduler][{method}] {title or '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞'} ‚Äî {price or '–Ω–µ—Ç —Ü–µ–Ω—ã'}")

    if price is not None and price != item.current_price:
        print(f"‚û°Ô∏è –¶–µ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –¥–ª—è {item.title or item.url}: {item.current_price} ‚Üí {price}")
        await update_current_price(item_id, price)

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ FK –∏ —à–ª—ë–º –Ω–∞ –µ–≥–æ telegram_id
        user = await get_user_by_id(item.user_id)
        if user and user.telegram_id:
            bot = Bot(token=settings.BOT_TOKEN)
            text = (
                f"üîî <b>–¶–µ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å!</b>\n\n"
                f"<b>{item.title or item.url}</b>\n"
                f"–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {item.current_price} ‚ÇΩ\n"
                f"–ù–æ–≤–∞—è —Ü–µ–Ω–∞: {price} ‚ÇΩ"
            )
            try:
                await bot.send_message(user.telegram_id, text, parse_mode="HTML")
            except Exception as e:
                print(f"[Scheduler] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await bot.session.close()
    else:
        print("–¶–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å.")


async def launch_all_price_checks():
    items = await get_all_active_items()
    for item in items:
        schedule_price_check(item.id, item.check_interval)
        print(f"[Scheduler] –ó–∞–¥–∞—á–∞ –∑–∞–ø—É—â–µ–Ω–∞ –¥–ª—è item_id={item.id}, –∏–Ω—Ç–µ—Ä–≤–∞–ª={item.check_interval} –º–∏–Ω.")

def clear_jobs():
    scheduler.remove_all_jobs()
